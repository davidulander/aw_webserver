{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/config/URLs.js","webpack:///./src/index.js","webpack:///./src/models/index.js","webpack:///./src/models/measurements.js","webpack:///./src/models/plants.js","webpack:///./src/models/sensors.js","webpack:///./src/models/waterings.js","webpack:///./src/routes/measurements.js","webpack:///./src/routes/plants.js","webpack:///./src/routes/sensors.js","webpack:///./src/routes/waterings.js","webpack:///./src/utils/pi_gateway_calls.js","webpack:///external \"axios\"","webpack:///external \"express\"","webpack:///external \"sequelize\""],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAO;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACDP;AAAA;AAAA;AAAA;AAAA;AAAA,cAAc,mBAAO,CAAC,wBAAS;AACQ;AACU;AACZ;AACM;;AAE3C;;AAEA,uBAAuB,uDAAO;AAC9B,4BAA4B,4DAAY;AACxC,sBAAsB,sDAAM;AAC5B,yBAAyB,yDAAS;;AAElC;AACA;AACA,YAAY,oBAAoB;AAChC,CAAC;AACD;AACA;AACA,CAAC;;;;;;;;;;;;;ACnBD;AAAA;AAAA;AAAa;;AAEqB;AAClC,YAAY,aAAoB;AAChC,eAAe,mBAAO,CAAC,oEAAoC;;AAE3D;;AAEA;AACA;AACA;AACA;;AAEA,wBAAwB,gDAAS;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,mBAAO,CAAC,uDAAmB;AAC/B,IAAI,mBAAO,CAAC,2CAAa;AACzB,IAAI,mBAAO,CAAC,6CAAc;AAC1B,IAAI,mBAAO,CAAC,iDAAgB;AAC5B;;AAEA;AACA;AACA,oCAAoC,gDAAS;AAC7C;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,qBAAqB,gDAAS;;AAE9B;AACA;;AAEA;AACe,qEAAM,EAAC;;;;;;;;;;;;;AC/CT;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,yBAAyB;AACpE,4CAA4C,0BAA0B;AACtE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,WAAW;AACX;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,uBAAuB;AACvB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;;;;;;;;;;;;;AClDa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,yCAAyC,yBAAyB;AAClE,sCAAsC,yBAAyB;AAC/D;;AAEA;AACA;AACA;AACA,kBAAkB,6BAA6B;AAC/C;AACA;AACA,KAAK;AACL;;AAEA;AACA;;;;;;;;;;;;;ACxBa;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,0CAA0C,0BAA0B;AACpE;AACA;AACA;;;;;;;;;;;;;ACba;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,wCAAwC,yBAAyB;AACjE;;AAEA;AACA;;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAA8B;AACG;AACjC,eAAe,8CAAO;;AAEtB;AACA,EAAE,qDAAE;AACJ;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB,MAAM;AACtB,KAAK;AACL,CAAC;;AAED;AACA,EAAE,qDAAE;AACJ;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB,MAAM;AACtB,KAAK;AACL,CAAC;;AAEc,qEAAM,EAAC;;;;;;;;;;;;;AC5BtB;AAAA;AAAA;AAAA;AAA8B;AACG;AACjC,eAAe,8CAAO;;AAEtB;AACA,cAAc,qDAAE;AAChB,EAAE,qDAAE;AACJ;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB,MAAM;AACtB,KAAK;AACL,CAAC;;AAEc,qEAAM,EAAC;;;;;;;;;;;;;ACjBtB;AAAA;AAAA;AAAA;AAAA;AAA8B;AACG;AAC+B;AAChE,eAAe,8CAAO;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,mFAAmB;AACrB;AACA;AACA,4BAA4B,aAAa;AACzC,KAAK;AACL,CAAC;;AAED;;AAEA;AACA;AACA,IAAI,qDAAE,iBAAiB,SAAS,gBAAgB,EAAE;AAClD,IAAI,qDAAE;AACN,iBAAiB,QAAQ,qDAAE,iBAAiB,kBAAkB,EAAE;AAChE,KAAK;AACL,IAAI,qDAAE;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,CAAC;;AAEc,qEAAM,EAAC;;;;;;;;;;;;;ACvCtB;AAAA;AAAA;AAAA;AAAA;AAA8B;AACG;AACsB;AACvD,eAAe,8CAAO;;AAEtB;AACA;AACA,EAAE,qDAAE;AACJ,cAAc,SAAS,eAAe,EAAE;AACxC;AACA;AACA,QAAQ,0EAAU;AAClB;AACA;AACA,WAAW;AACX;AACA,kCAAkC,WAAW;AAC7C,WAAW;AACX,OAAO;AACP,8BAA8B,8BAA8B;AAC5D;AACA,KAAK;AACL;AACA;AACA,4BAA4B,8BAA8B;AAC1D,KAAK;AACL,CAAC;;AAEc,qEAAM,EAAC;;;;;;;;;;;;;AC5BtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiC;AACP;AAC4C;;AAE/D;AACP;AACA,IAAI,4CAAK;AACT;AACA;AACA;AACA,UAAU,iEAAoB;AAC9B;AACA;AACA,QAAQ,qDAAE;AACV;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA,IAAI,4CAAK;AACT;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,qDAAE;AACV,mBAAmB,oBAAoB;AACvC;AACA;AACA,WAAW;AACX;AACA;AACA,oBAAoB,MAAM;AAC1B,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP,GAAG;AACH;;;;;;;;;;;;ACnEA,kC;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,sC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","export const gatewayBaseURL = \"http://192.168.0.10:8000\";\r\nexport const humidityMeansurePath = \"/sensors/humidity\";\r\n","let express = require(\"express\");\r\nimport sensors from \"./routes/sensors\";\r\nimport measurements from \"./routes/measurements\";\r\nimport plants from \"./routes/plants\";\r\nimport waterings from \"./routes/waterings\";\r\n\r\nlet server = express();\r\n\r\nserver.use(\"/sensors\", sensors);\r\nserver.use(\"/measurements\", measurements);\r\nserver.use(\"/plants\", plants);\r\nserver.use(\"/waterings\", waterings);\r\n\r\nserver.use(\"/\", (req, res) => {\r\n  console.log(\"Hello from test\");\r\n  res.json({ status: \"success\" });\r\n});\r\nserver.listen(8000, () => {\r\n  console.log(\"server running on port 8000\");\r\n});\r\n","\"use strict\";\r\n\r\nimport Sequelize from \"sequelize\";\r\nconst env = process.env.NODE_ENV || \"development\";\r\nconst config = require(__dirname + \"/../config/config.json\")[env];\r\n\r\nlet models = {};\r\n\r\nfunction getModels(config, force = false) {\r\n  if (Object.keys(models).length && !force) {\r\n    return models;\r\n  }\r\n\r\n  const sequelize = new Sequelize(\r\n    config.database,\r\n    config.username,\r\n    config.password,\r\n    config\r\n  );\r\n\r\n  let modules = [\r\n    require(\"./measurements.js\"),\r\n    require(\"./plants.js\"),\r\n    require(\"./sensors.js\"),\r\n    require(\"./waterings.js\")\r\n  ];\r\n\r\n  // Initialize models\r\n  modules.forEach(module => {\r\n    const model = module(sequelize, Sequelize, config);\r\n    models[model.name] = model;\r\n  });\r\n\r\n  // Apply associations\r\n  Object.keys(models).forEach(key => {\r\n    if (\"associate\" in models[key]) {\r\n      models[key].associate(models);\r\n    }\r\n  });\r\n\r\n  models.sequelize = sequelize;\r\n  models.Sequelize = Sequelize;\r\n\r\n  return models;\r\n}\r\n\r\ngetModels(config, false);\r\nexport default models;\r\n","\"use strict\";\nmodule.exports = (sequelize, DataTypes) => {\n  const Op = sequelize.Op;\n  const measurements = sequelize.define(\n    \"measurements\",\n    {\n      sensor_id: DataTypes.INTEGER,\n      plant_id: DataTypes.INTEGER,\n      value: DataTypes.DOUBLE\n    },\n    {\n      scopes: {\n        lastMeasurement: {\n          order: [[\"createdAt\", \"DESC\"]]\n        }\n      }\n    }\n  );\n  measurements.associate = models => {\n    measurements.belongsTo(models.plants, { foreignKey: \"plant_id\" });\n    measurements.belongsTo(models.sensors, { foreignKey: \"sensor_id\" });\n  };\n\n  measurements.measurements = (plantID, onlyLast) => {\n    return new Promise((resolve, reject) => {\n      let query;\n      if (onlyLast) {\n        query = measurements.findAll({\n          where: {\n            plant_id: { [Op.eq]: plantID }\n          },\n          limit: 1\n        });\n      } else {\n        query = measurements.findAll({\n          where: {\n            plant_id: { [Op.eq]: plantID }\n          }\n        });\n      }\n      query\n        .then(values => {\n          resolve(JSON.stringify(values));\n        })\n        .catch(() => {\n          reject(\"can't get measurements\");\n        });\n    });\n  };\n  return measurements;\n};\n","\"use strict\";\nmodule.exports = (sequelize, DataTypes) => {\n  const plants = sequelize.define(\n    \"plants\",\n    {\n      name: DataTypes.STRING\n    },\n    {}\n  );\n  plants.associate = function(models) {\n    plants.hasMany(models.measurements, { foreignKey: \"plant_id\" });\n    plants.hasMany(models.waterings, { foreignKey: \"plant_id\" });\n  };\n\n  plants.all = () => {\n    return new Promise((resolve, reject) => {\n      plants\n        .findAll({ attributes: [\"id\", \"name\"] })\n        .then(res => resolve(JSON.stringify(res)))\n        .catch(err => reject(\"error with findAll plants \", err));\n    });\n  };\n\n  return plants;\n};\n","\"use strict\";\nmodule.exports = (sequelize, DataTypes) => {\n  const sensors = sequelize.define(\n    \"sensors\",\n    {\n      name: DataTypes.STRING\n    },\n    {}\n  );\n  sensors.associate = function(models) {\n    sensors.hasMany(models.measurements, { foreignKey: \"sensor_id\" });\n  };\n  return sensors;\n};\n","\"use strict\";\nmodule.exports = (sequelize, DataTypes) => {\n  const waterings = sequelize.define(\n    \"waterings\",\n    {\n      plant_id: DataTypes.INTEGER\n    },\n    {}\n  );\n  waterings.associate = function(models) {\n    waterings.belongsTo(models.plants, { foreignKey: \"plant_id\" });\n  };\n\n  return waterings;\n};\n","import express from \"express\";\r\nimport db from \"../models/index\";\r\nconst router = express.Router();\r\n\r\nrouter.get(\"/:plantID\", (req, res, next) => {\r\n  db.measurements\r\n    .measurements(req.params.plantID)\r\n    .then(values => {\r\n      res.json(values);\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      res.json({ err });\r\n    });\r\n});\r\n\r\nrouter.get(\"/last/:plantID\", (req, res, next) => {\r\n  db.measurements\r\n    .measurements(req.params.plantID, true)\r\n    .then(values => {\r\n      res.json(values);\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      res.json({ err });\r\n    });\r\n});\r\n\r\nexport default router;\r\n","import express from \"express\";\r\nimport db from \"../models/index\";\r\nconst router = express.Router();\r\n\r\nrouter.get(\"/\", (req, res, next) => {\r\n  console.log(db.plants);\r\n  db.plants\r\n    .all()\r\n    .then(values => {\r\n      res.json(values);\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      res.json({ err });\r\n    });\r\n});\r\n\r\nexport default router;\r\n","import express from \"express\";\r\nimport db from \"../models/index\";\r\nimport { humidityMeasurement } from \"../utils/pi_gateway_calls\";\r\nconst router = express.Router();\r\n\r\nrouter.get(\"/humidity\", (req, res, next) => {\r\n  console.log(\"request recieved humidity\");\r\n  // let measuredValue = Math.random();\r\n  // console.log(measuredValue);\r\n  let sensorID = 1;\r\n  let plantID = 1;\r\n  humidityMeasurement(plantID, sensorID)\r\n    .then(measurement => res.json(measurement))\r\n    .catch(err => {\r\n      res.status(500).send({ error: err });\r\n    });\r\n});\r\n\r\n// router.get(\"/all\")\r\n\r\nrouter.get(\"/db\", (req, res, next) => {\r\n  Promise.all([\r\n    db.plants.findOne({ where: { name: \"Basil\" } }),\r\n    db.measurements.findAll({\r\n      include: [{ model: db.plants, where: { name: \"Maskros\" } }]\r\n    }),\r\n    db.measurements.scope(\"lastMeasurement\").findAll()\r\n  ])\r\n    .then(queryRes => {\r\n      res.json({\r\n        status: \"success\",\r\n        plant: JSON.stringify(queryRes[0]),\r\n        measurement: JSON.stringify(queryRes[1]),\r\n        scope: JSON.stringify(queryRes[2])\r\n      });\r\n    })\r\n    .catch(err => console.log(err));\r\n});\r\n\r\nexport default router;\r\n","import express from \"express\";\r\nimport db from \"../models/index\";\r\nimport { applyWater } from \"../utils/pi_gateway_calls\";\r\nconst router = express.Router();\r\n\r\nrouter.post(\"/:plant_id\", (req, res, next) => {\r\n  let plant_id = req.params.plant_id;\r\n  db.plants\r\n    .findOne({ where: { id: plant_id } })\r\n    .then(plant => {\r\n      if (plant !== null) {\r\n        applyWater(plant_id)\r\n          .then(values => {\r\n            res.json(values);\r\n          })\r\n          .catch(err => {\r\n            res.status(500).json({ err: err });\r\n          });\r\n      } else {\r\n        res.status(404).json({ err: \"could not find plant\" });\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      res.status(405).json({ err: \"could not find plant\" });\r\n    });\r\n});\r\n\r\nexport default router;\r\n","import db from \"../models/index\";\r\nimport axios from \"axios\";\r\nimport { gatewayBaseURL, humidityMeansurePath } from \"../config/URLs\";\r\n\r\nexport const humidityMeasurement = (plantID, sensorID) => {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      // .get(routes.gatewayBaseURL + routes.humidityMeansurePath)\r\n      .get(\r\n        \"https://1b6a59c8-b449-4360-a30c-d0d6220dfb77.mock.pstmn.io\" +\r\n          humidityMeansurePath\r\n      )\r\n      .then(sensorRes => {\r\n        db.measurements\r\n          .create({\r\n            plant_id: plantID,\r\n            sensor_id: sensorID,\r\n            value: sensorRes.data.toFixed(3)\r\n          })\r\n          .then(measurement => {\r\n            wateringJudge(measurement.value, plantID);\r\n            console.log(\"forsätter...\");\r\n            resolve(JSON.stringify(measurement));\r\n          })\r\n          .catch(err => {\r\n            console.log(\"couldn't save measurement to db\", err);\r\n            reject(\"couldn't save measurement to db\");\r\n          });\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Error with pi humidity request\", err);\r\n        reject(\"Error with pi humidity request\");\r\n      });\r\n  });\r\n};\r\n\r\nconst wateringJudge = (measurement, plantID) => {\r\n  let dryThreshold = 0.5;\r\n  if (measurement < dryThreshold) applyWater(plantID);\r\n  console.log(\"wateringJudge returning\");\r\n  return;\r\n};\r\n\r\nexport const applyWater = plantID => {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(\r\n        \"https://1b6a59c8-b449-4360-a30c-d0d6220dfb77.mock.pstmn.io\" +\r\n          routes.humidityMeansurePath\r\n      )\r\n      .then(res => {\r\n        console.log(\"water was applied\");\r\n        db.waterings\r\n          .create({ plant_id: plantID })\r\n          .then(values => {\r\n            resolve(JSON.stringify(values));\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n            reject({ err });\r\n          });\r\n      })\r\n      .catch(err => {\r\n        console.log(\"error from apply water\", err);\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n","module.exports = require(\"axios\");","module.exports = require(\"express\");","module.exports = require(\"sequelize\");"],"sourceRoot":""}